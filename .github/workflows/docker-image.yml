name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
        type: choice
        options:
          - info
          - warning
      print_tags:
        description: 'True to print to STDOUT'
        required: false
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: false
        type: string
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status


    steps:
    - uses: actions/checkout@v3
    - name: Set up maven
      uses: s4u/setup-maven-action@v1.2.1
      with:
        java-version: '11'
        maven-version: '3.6.3'
    - name: docker login
      run: docker login -u=citelibre -p="${{ secrets.PASSWORD_DOCKER_CITELIBRE }}"
    - name: Retrieve version in pom with  Maven
      run: echo "VERSION=$(cd citelibre-rendezvous && mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | sed -n -e '/^\[.*\]/ !{ /^[0-9]/ { p; q } }')">> $GITHUB_ENV

    - name: Display version
      run: echo "version $VERSION"

    - name: Webapp display
      run: time curl -v https://dev.lutece.paris.fr/maven_repository/fr/paris/lutece/lutece-core/7.0.10/lutece-core-7.0.10-webapp.zip -o test.zip 

    - name: build war ihm
      run: cd citelibre-rendezvous && mvn -e lutece:site-assembly -Pdev
      
    - name: retrieve war name
      run:  echo "WAR_NAME=$(cd citelibre-rendezvous/target; ls *.war|sed -e 's/\.war//g')" >> $GITHUB_ENV
      
    - name: build rendezvous
      run: docker build  citelibre-rendezvous  --build-arg site=$WAR_NAME -t citelibre/rendezvous:ihm-$VERSION
    
    - name: build rendezvous  
      run: docker save -o citelibre-rendezvous.tar citelibre/rendezvous:ihm-$VERSION
      
    - name: Run Trivy vulnerability scanner in tarball mode of rendez vous image
      uses: aquasecurity/trivy-action@master
      with:
        input: /github/workspace/citelibre-rendezvous.tar
        severity: 'CRITICAL,HIGH'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
      
    - name: build fakesmtp
      run: docker build  fake-smtp -t citelibre/rendezvous:fake-smtp-$VERSION
      
    - name: build mysql
      run: docker build  mysql -t citelibre/rendezvous:db-$VERSION
      
    - name: build matomo
      run: docker build  matomo -t citelibre/rendezvous:matomo-$VERSION
      
    - name: build solr
      run: docker build  solr -t citelibre/rendezvous:solr-$VERSION
      
    - name: build keycloak
      run: docker build  keycloak -t citelibre/rendezvous:keycloak-$VERSION
      
    - name: push images on docker hub
      run: |
        docker push citelibre/rendezvous:solr-$VERSION
        docker push citelibre/rendezvous:db-$VERSION
        docker push citelibre/rendezvous:matomo-$VERSION
        docker push citelibre/rendezvous:fake-smtp-$VERSION
        docker push citelibre/rendezvous:keycloak-$VERSION
        docker push citelibre/rendezvous:ihm-$VERSION
      
    - name: update docker compose
      run: |  
        sed -i -e "s/:fake-smtp.*$/:fake-smtp-$VERSION/g" docker-compose.yml 
        sed -i -e "s/:solr.*$/:solr-$VERSION/g" docker-compose.yml
        sed -i -e "s/:matomo.*$/:matomo-$VERSION/g" docker-compose.yml
        sed -i -e "s/:db.*$/:db-$VERSION/g" docker-compose.yml
        sed -i -e "s/:ihm.*$/:ihm-$VERSION/g" docker-compose.yml
        sed -i -e "s/:keycloak.*$/:keycloak-$VERSION/g" docker-compose.yml
        cat docker-compose.yml
        
    - name: Commit and push docker compose
      run: |
        rm -rf citelibre-rendezvous/target
        git config --global user.name "githubaction"
        git config --global user.email "githubaction"
        git add docker-compose.yml
        git commit -m "ci(githubaction): update docker compose with version $VERSION"  --allow-empty
        git push
