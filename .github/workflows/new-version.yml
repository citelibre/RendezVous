name: Create new version

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: false
        default: 'warning'
        type: choice
        options:
          - info
          - warning
      print_tags:
        description: 'True to print to STDOUT'
        required: false
        type: boolean
      tags:
        description: 'Test scenario tags'
        required: false
        type: string

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
      id-token: write


    steps:
    - uses: actions/checkout@v4
    - name: Set up maven
      uses: s4u/setup-maven-action@v1.18.0
      with:
        java-version: '11'
        maven-version: '3.6.3'
    - name: docker login
      run: docker login -u=citelibre -p="${{ secrets.PASSWORD_DOCKER_CITELIBRE }}"
    
    - name: Get new version
      run: |
        version=$(cat citelibre-rendezvous/pom.xml | grep "<version" | head -n2 | tail -n1 | cut -d ">" -f2 | cut -d "<" -f1)
        echo "VERSION=${version}">> $GITHUB_ENV
        echo "${version}" > VERSION

    - name: Display version
      run: echo "Version $VERSION"

    - name: build war ihm
      run: cd citelibre-rendezvous
      
    - name: build rendezvous
      run: docker build  citelibre-rendezvous -t citelibre/rendezvous:ihm-$VERSION
    
    - name: Save rendezvous
      run: docker save -o citelibre-rendezvous.tar citelibre/rendezvous:ihm-$VERSION
      
    - name: Run Trivy vulnerability scanner in tarball mode of rendez vous image
      uses: aquasecurity/trivy-action@0.20.0
      with:
        input: /github/workspace/citelibre-rendezvous.tar
        severity: 'CRITICAL,HIGH'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
      
    - name: build mysql
      run: docker build  mysql -t citelibre/rendezvous:db-$VERSION
      
    - name: build matomo
      run: docker build  matomo -t citelibre/rendezvous:matomo-$VERSION
      
    - name: build solr
      run: docker build  solr -t citelibre/rendezvous:solr-$VERSION
      
    - name: build keycloak
      run: docker build  keycloak -t citelibre/rendezvous:keycloak-$VERSION

    - name: build kibana
      run: docker build  kibana -t citelibre/rendezvous:kibana-$VERSION

    - name: build elasticsearch
      run: docker build  elasticsearch -t citelibre/rendezvous:elasticsearch-$VERSION
      
    - name: push images on docker hub
      run: |
        docker push citelibre/rendezvous:solr-$VERSION
        docker push citelibre/rendezvous:db-$VERSION
        docker push citelibre/rendezvous:matomo-$VERSION
        docker push citelibre/rendezvous:keycloak-$VERSION
        docker push citelibre/rendezvous:ihm-$VERSION
        docker push citelibre/rendezvous:kibana-$VERSION
        docker push citelibre/rendezvous:elasticsearch-$VERSION
      
    - name: update docker compose
      run: |  
        sed -i -e "s/:solr.*$/:solr-$VERSION/g" docker-compose.yml
        sed -i -e "s/:matomo.*$/:matomo-$VERSION/g" docker-compose.yml
        sed -i -e "s/:db.*$/:db-$VERSION/g" docker-compose.yml
        sed -i -e "s/:ihm.*$/:ihm-$VERSION/g" docker-compose.yml
        sed -i -e "s/:keycloak.*$/:keycloak-$VERSION/g" docker-compose.yml
        sed -i -e "s/:kibana.*$/:kibana-$VERSION/g" docker-compose.yml
        sed -i -e "s/:elasticsearch.*$/:elasticsearch-$VERSION/g" docker-compose.yml
        cat docker-compose.yml

    - name: Install Cosign
      run: |
        COSIGN_VERSION=$(curl -s https://api.github.com/repos/sigstore/cosign/releases/latest | jq -r .tag_name)
        curl -LO https://github.com/sigstore/cosign/releases/download/$COSIGN_VERSION/cosign-linux-amd64
        chmod +x cosign-linux-amd64
        sudo mv cosign-linux-amd64 /usr/local/bin/cosign
      
    - name: Sign Docker images with Cosign (Keyless OIDC)
      run: |
        for service in rendezvous mysql matomo solr keycloak kibana elasticsearch; do
          cosign sign --yes citelibre/rendezvous:$service-$VERSION
        done
      
    - name: Verify signatures
      run: |
        for service in rendezvous mysql matomo solr keycloak kibana elasticsearch; do
          cosign verify citelibre/rendezvous:$service-$VERSION
        done
        
    - name: Commit and push docker compose
      run: |
        rm -rf citelibre-rendezvous/target
        git config --global user.name "githubaction"
        git config --global user.email "githubaction"
        git add docker-compose.yml
        git commit -m "ci(githubaction): update docker compose with version $VERSION"  --allow-empty
        git push
